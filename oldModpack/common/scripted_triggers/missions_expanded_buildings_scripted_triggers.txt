# Buildings scripted triggers
## province scope
can_temple_line = {
	OR = {
		can_build = temple
		can_build = taxation_lvl_2
		can_build = cathedral
		can_build = taxation_lvl_4
	}
	num_free_building_slots = 1
}

can_fort_line = {
	OR = {
		can_build = fort_15th
		can_build = fort_16th
		can_build = fort_17th
		can_build = fort_18th
	}
	num_free_building_slots = 1
}

can_workshop_line = {
	OR = {
		can_build = workshop
		can_build = production_lvl_2
		can_build = production_lvl_3
		can_build = counting_house
	}
	num_free_building_slots = 1
}

can_marketplace_line = {
	OR = {
		can_build = marketplace
		can_build = trade_lvl_2
		can_build = trade_depot
		can_build = stock_exchange
	}
	num_free_building_slots = 1
}

can_shipyard_line = {
	OR = {
		can_build = shipyard
		can_build = navyforcelimit_lvl_2
		can_build = grand_shipyard
	}
	num_free_building_slots = 1
}

can_courthouse_line = {
	OR = {
		can_build = courthouse
		can_build = town_hall
		can_build = government_lvl_3
		can_build = government_lvl_4
	}
	num_free_building_slots = 1
}

can_dock_line = {
	OR = {
		can_build = dock
		can_build = navymanpower_lvl_2
		can_build = drydock
	}
	num_free_building_slots = 1
}

can_forcelimit_line = {
	OR = {
		can_build = forcelimit_lvl_1
		can_build = regimental_camp
		can_build = conscription_center
	}
	num_free_building_slots = 1
}

province_has_building_of_group = {
	#	"group" that can be checked:
	#		building groups (trade, government, navy, production, manpower, forcelimit, army, taxation, defense, all)
	#		-- government does not use universities
	#
	#	use "all" to check if the province has any of the group's/sub group's buildings
	#	use "equal_or_more_advanced_than" to check if the province has that or a building replacing that building
	#
	#	examples of usage:
	#		province_has_building_of_group = { group = trade all = yes }
	#		province_has_building_of_group = { group = trade equal_or_more_advanced_than = trade_depot }
	#		province_has_building_of_group = { group = government all = yes }
	#		province_has_building_of_group = { group = government equal_or_more_advanced_than = townhall }
	#		province_has_building_of_group = { group = all all = yes }
	#	when using "group = all", you have to use "all = yes", "equal_or_more_advanced_than" is not accepted here
	#
	#	it's highly advised to use this trigger inside of a custom_trigger_tooltip section
	#	already localised tooltips are:
	#		PROVINCE_HAS_BUILDING_OF_GROUP_TRADE_ALL
	#		PROVINCE_HAS_BUILDING_OF_GROUP_TRADE_EOMAT_marketplace
	#		PROVINCE_HAS_BUILDING_OF_GROUP_TRADE_EOMAT_trade_depot
	#		PROVINCE_HAS_BUILDING_OF_GROUP_TRADE_EOMAT_stock_exchange
	#		PROVINCE_HAS_BUILDING_OF_GROUP_GOVERNMENT_ALL
	#		PROVINCE_HAS_BUILDING_OF_GROUP_GOVERNMENT_EOMAT_courthouse
	#		PROVINCE_HAS_BUILDING_OF_GROUP_GOVERNMENT_EOMAT_town_hall
	#		PROVINCE_HAS_BUILDING_OF_GROUP_NAVY_ALL
	#		PROVINCE_HAS_BUILDING_OF_GROUP_NAVY_EOMAT_dock
	#		PROVINCE_HAS_BUILDING_OF_GROUP_NAVY_EOMAT_drydock
	#		PROVINCE_HAS_BUILDING_OF_GROUP_NAVY_EOMAT_shipyard
	#		PROVINCE_HAS_BUILDING_OF_GROUP_NAVY_EOMAT_grand_shipyard
	#		PROVINCE_HAS_BUILDING_OF_GROUP_PRODUCTION_ALL
	#		PROVINCE_HAS_BUILDING_OF_GROUP_PRODUCTION_EOMAT_workshop
	#		PROVINCE_HAS_BUILDING_OF_GROUP_PRODUCTION_EOMAT_counting_house
	#		PROVINCE_HAS_BUILDING_OF_GROUP_ARMY_ALL
	#		PROVINCE_HAS_BUILDING_OF_GROUP_MANPOWER_ALL
	#		PROVINCE_HAS_BUILDING_OF_GROUP_MANPOWER_EOMAT_barracks
	#		PROVINCE_HAS_BUILDING_OF_GROUP_MANPOWER_EOMAT_training_fields
	#		PROVINCE_HAS_BUILDING_OF_GROUP_FORCELIMIT_ALL
	#		PROVINCE_HAS_BUILDING_OF_GROUP_FORCELIMIT_EOMAT_regimental_camp
	#		PROVINCE_HAS_BUILDING_OF_GROUP_FORCELIMIT_EOMAT_conscription_center
	#		PROVINCE_HAS_BUILDING_OF_GROUP_TAXATION_ALL
	#		PROVINCE_HAS_BUILDING_OF_GROUP_TAXATION_EOMAT_temple
	#		PROVINCE_HAS_BUILDING_OF_GROUP_TAXATION_EOMAT_cathedral
	#		PROVINCE_HAS_BUILDING_OF_GROUP_DEFENSE_ALL
	#		PROVINCE_HAS_BUILDING_OF_GROUP_DEFENSE_EOMAT_fort_15th
	#		PROVINCE_HAS_BUILDING_OF_GROUP_DEFENSE_EOMAT_fort_16th
	#		PROVINCE_HAS_BUILDING_OF_GROUP_DEFENSE_EOMAT_fort_17th
	#		PROVINCE_HAS_BUILDING_OF_GROUP_DEFENSE_EOMAT_fort_18th
	#		PROVINCE_HAS_BUILDING_OF_GROUP_ALL
	#		NOT_PROVINCE_HAS_BUILDING_OF_GROUP_TRADE_ALL
	#		NOT_PROVINCE_HAS_BUILDING_OF_GROUP_TRADE_EOMAT_marketplace
	#		NOT_PROVINCE_HAS_BUILDING_OF_GROUP_TRADE_EOMAT_trade_depot
	#		NOT_PROVINCE_HAS_BUILDING_OF_GROUP_TRADE_EOMAT_stock_exchange
	#		NOT_PROVINCE_HAS_BUILDING_OF_GROUP_GOVERNMENT_ALL
	#		NOT_PROVINCE_HAS_BUILDING_OF_GROUP_GOVERNMENT_EOMAT_courthouse
	#		NOT_PROVINCE_HAS_BUILDING_OF_GROUP_GOVERNMENT_EOMAT_town_hall
	#		NOT_PROVINCE_HAS_BUILDING_OF_GROUP_NAVY_ALL
	#		NOT_PROVINCE_HAS_BUILDING_OF_GROUP_NAVY_EOMAT_dock
	#		NOT_PROVINCE_HAS_BUILDING_OF_GROUP_NAVY_EOMAT_drydock
	#		NOT_PROVINCE_HAS_BUILDING_OF_GROUP_NAVY_EOMAT_shipyard
	#		NOT_PROVINCE_HAS_BUILDING_OF_GROUP_NAVY_EOMAT_grand_shipyard
	#		NOT_PROVINCE_HAS_BUILDING_OF_GROUP_PRODUCTION_ALL
	#		NOT_PROVINCE_HAS_BUILDING_OF_GROUP_PRODUCTION_EOMAT_workshop
	#		NOT_PROVINCE_HAS_BUILDING_OF_GROUP_PRODUCTION_EOMAT_counting_house
	#		NOT_PROVINCE_HAS_BUILDING_OF_GROUP_ARMY_ALL
	#		NOT_PROVINCE_HAS_BUILDING_OF_GROUP_MANPOWER_ALL
	#		NOT_PROVINCE_HAS_BUILDING_OF_GROUP_MANPOWER_EOMAT_barracks
	#		NOT_PROVINCE_HAS_BUILDING_OF_GROUP_MANPOWER_EOMAT_training_fields
	#		NOT_PROVINCE_HAS_BUILDING_OF_GROUP_FORCELIMIT_ALL
	#		NOT_PROVINCE_HAS_BUILDING_OF_GROUP_FORCELIMIT_EOMAT_regimental_camp
	#		NOT_PROVINCE_HAS_BUILDING_OF_GROUP_FORCELIMIT_EOMAT_conscription_center
	#		NOT_PROVINCE_HAS_BUILDING_OF_GROUP_TAXATION_ALL
	#		NOT_PROVINCE_HAS_BUILDING_OF_GROUP_TAXATION_EOMAT_temple
	#		NOT_PROVINCE_HAS_BUILDING_OF_GROUP_TAXATION_EOMAT_cathedral
	#		NOT_PROVINCE_HAS_BUILDING_OF_GROUP_DEFENSE_ALL
	#		NOT_PROVINCE_HAS_BUILDING_OF_GROUP_DEFENSE_EOMAT_fort_15th
	#		NOT_PROVINCE_HAS_BUILDING_OF_GROUP_DEFENSE_EOMAT_fort_16th
	#		NOT_PROVINCE_HAS_BUILDING_OF_GROUP_DEFENSE_EOMAT_fort_17th
	#		NOT_PROVINCE_HAS_BUILDING_OF_GROUP_DEFENSE_EOMAT_fort_18th
	#		NOT_PROVINCE_HAS_BUILDING_OF_GROUP_ALL

	if = {
		limit = {
			variable_arithmetic_trigger = {
				export_to_variable = {
					which = check_$group$_buildings
					value = 1
				}
				check_variable = { check_trade_buildings = 1 }
			}
		}
		[[all]
			if = {
				limit = {
					always = $all$
				}
				OR = {
					has_building = marketplace
					has_building = trade_lvl_2
					has_building = trade_depot
					has_building = stock_exchange
				}
			}
		]
		[[equal_or_more_advanced_than]
			if = {
				limit = {
					variable_arithmetic_trigger = {
						export_to_variable = {
							which = equal_or_more_advanced_than_$equal_or_more_advanced_than$
							value = 1
						}
						check_variable = { equal_or_more_advanced_than_marketplace = 1 }
					}
				}
				OR = {
					has_building = marketplace
					has_building = trade_lvl_2
					has_building = trade_depot
					has_building = stock_exchange
				}
			}
			else_if = {
				limit = {
					variable_arithmetic_trigger = {
						export_to_variable = {
							which = equal_or_more_advanced_than_$equal_or_more_advanced_than$
							value = 1
						}
						check_variable = { equal_or_more_advanced_than_trade_depot = 1 }
					}
				}
				OR = {
					has_building = trade_depot
					has_building = stock_exchange
				}
			}
			else = {
				has_building = stock_exchange
			}
		]
	}
	else_if = {
		limit = {
			variable_arithmetic_trigger = {
				export_to_variable = {
					which = check_$group$_buildings
					value = 1
				}
				check_variable = { check_government_buildings = 1 }
			}
		}
		[[all]
			if = {
				limit = {
					always = $all$
				}
				OR = {
					has_building = courthouse
					has_building = town_hall
					has_building = government_lvl_3
					has_building = government_lvl_4
				}
			}
		]
		[[equal_or_more_advanced_than]
			if = {
				limit = {
					variable_arithmetic_trigger = {
						export_to_variable = {
							which = equal_or_more_advanced_than_$equal_or_more_advanced_than$
							value = 1
						}
						check_variable = { equal_or_more_advanced_than_courthouse = 1 }
					}
				}
				OR = {
					has_building = courthouse
					has_building = town_hall
					has_building = government_lvl_3
					has_building = government_lvl_4
				}
			}
			else_if = {
				limit = {
					variable_arithmetic_trigger = {
						export_to_variable = {
							which = equal_or_more_advanced_than_$equal_or_more_advanced_than$
							value = 1
						}
						check_variable = { equal_or_more_advanced_than_town_hall = 1 }
					}
				}
				OR = {
					has_building = town_hall
					has_building = government_lvl_3
					has_building = government_lvl_4
				}
			}
			else = {
				has_building = government_lvl_4
			}
		]
	}
	else_if = {
		limit = {
			variable_arithmetic_trigger = {
				export_to_variable = {
					which = check_$group$_buildings
					value = 1
				}
				check_variable = { check_navy_buildings = 1 }
			}
		}
		[[all]
			if = {
				limit = {
					always = $all$
				}
				OR = {
					has_building = dock
					has_building = navymanpower_lvl_2
					has_building = drydock
					has_building = shipyard
					has_building = navyforcelimit_lvl_2
					has_building = grand_shipyard
					has_building = navalbase_lvl_1
					has_building = navalbase_lvl_2
				}
			}
		]
		[[equal_or_more_advanced_than]
			if = {
				limit = {
					variable_arithmetic_trigger = {
						export_to_variable = {
							which = equal_or_more_advanced_than_$equal_or_more_advanced_than$
							value = 1
						}
						check_variable = { equal_or_more_advanced_than_dock = 1 }
					}
				}
				OR = {
					has_building = dock
					has_building = navymanpower_lvl_2
					has_building = drydock
				}
			}
			else_if = {
				limit = {
					variable_arithmetic_trigger = {
						export_to_variable = {
							which = equal_or_more_advanced_than_$equal_or_more_advanced_than$
							value = 1
						}
						check_variable = { equal_or_more_advanced_than_drydock = 1 }
					}
				}
				has_building = drydock
			}
			else_if = {
				limit = {
					variable_arithmetic_trigger = {
						export_to_variable = {
							which = equal_or_more_advanced_than_$equal_or_more_advanced_than$
							value = 1
						}
						check_variable = { equal_or_more_advanced_than_shipyard = 1 }
					}
				}
				OR = {
					has_building = shipyard
					has_building = navyforcelimit_lvl_2
					has_building = grand_shipyard
				}
			}
			else = {
				has_building = grand_shipyard
			}
		]
	}
	else_if = {
		limit = {
			variable_arithmetic_trigger = {
				export_to_variable = {
					which = check_$group$_buildings
					value = 1
				}
				check_variable = { check_production_buildings = 1 }
			}
		}
		[[all]
			if = {
				limit = {
					always = $all$
				}
				OR = {
					has_building = workshop
					has_building = production_lvl_2
					has_building = production_lvl_3
					has_building = counting_house
				}
			}
		]
		[[equal_or_more_advanced_than]
			if = {
				limit = {
					variable_arithmetic_trigger = {
						export_to_variable = {
							which = equal_or_more_advanced_than_$equal_or_more_advanced_than$
							value = 1
						}
						check_variable = { equal_or_more_advanced_than_workshop = 1 }
					}
				}
				OR = {
					has_building = workshop
					has_building = production_lvl_2
					has_building = production_lvl_3
					has_building = counting_house
				}
			}
			else = {
				has_building = counting_house
			}
		]
	}
	else_if = {
		limit = {
			variable_arithmetic_trigger = {
				export_to_variable = {
					which = check_$group$_buildings
					value = 1
				}
				check_variable = { check_manpower_buildings = 1 }
			}
		}
		[[all]
			if = {
				limit = {
					always = $all$
				}
				OR = {
					has_building = manpower_lvl_1
					has_building = barracks
					has_building = training_fields
				}
			}
		]
		[[equal_or_more_advanced_than]
			if = {
				limit = {
					variable_arithmetic_trigger = {
						export_to_variable = {
							which = equal_or_more_advanced_than_$equal_or_more_advanced_than$
							value = 1
						}
						check_variable = { equal_or_more_advanced_than_barracks = 1 }
					}
				}
				OR = {
					has_building = barracks
					has_building = training_fields
				}
			}
			else_if = {
				limit = {
					variable_arithmetic_trigger = {
						export_to_variable = {
							which = equal_or_more_advanced_than_$equal_or_more_advanced_than$
							value = 1
						}
						check_variable = { equal_or_more_advanced_than_training_fields = 1 }
					}
				}
				has_building = training_fields
			}
		]
	}
	else_if = {
		limit = {
			variable_arithmetic_trigger = {
				export_to_variable = {
					which = check_$group$_buildings
					value = 1
				}
				check_variable = { check_forcelimit_buildings = 1 }
			}
		}
		[[all]
			if = {
				limit = {
					always = $all$
				}
				OR = {
					has_building = forcelimit_lvl_1
					has_building = regimental_camp
					has_building = conscription_center
				}
			}
		]
		[[equal_or_more_advanced_than]
			if = {
				limit = {
					variable_arithmetic_trigger = {
						export_to_variable = {
							which = equal_or_more_advanced_than_$equal_or_more_advanced_than$
							value = 1
						}
						check_variable = { equal_or_more_advanced_than_regimental_camp = 1 }
					}
				}
				OR = {
					has_building = regimental_camp
					has_building = conscription_center
				}
			}
			else = {
				has_building = conscription_center
			}
		]
	}
	else_if = {
		limit = {
			variable_arithmetic_trigger = {
				export_to_variable = {
					which = check_$group$_buildings
					value = 1
				}
				check_variable = { check_army_buildings = 1 }
			}
		}
		[[all]
			if = {
				limit = {
					always = $all$
				}
				OR = {
					has_building = manpower_lvl_1
					has_building = barracks
					has_building = training_fields
					has_building = forcelimit_lvl_1
					has_building = regimental_camp
					has_building = conscription_center
				}
			}
		]
	}
	else_if = {
		limit = {
			variable_arithmetic_trigger = {
				export_to_variable = {
					which = check_$group$_buildings
					value = 1
				}
				check_variable = { check_taxation_buildings = 1 }
			}
		}
		[[all]
			if = {
				limit = {
					always = $all$
				}
				OR = {
					has_building = temple
					has_building = taxation_lvl_2
					has_building = cathedral
					has_building = taxation_lvl_4
				}
			}
		]
		[[equal_or_more_advanced_than]
			if = {
				limit = {
					variable_arithmetic_trigger = {
						export_to_variable = {
							which = equal_or_more_advanced_than_$equal_or_more_advanced_than$
							value = 1
						}
						check_variable = { equal_or_more_advanced_than_temple = 1 }
					}
				}
				OR = {
					has_building = temple
					has_building = taxation_lvl_2
					has_building = cathedral
					has_building = taxation_lvl_4
				}
			}
			else = {
				has_building = cathedral
			}
		]
	}
	else_if = {
		limit = {
			variable_arithmetic_trigger = {
				export_to_variable = {
					which = check_$group$_buildings
					value = 1
				}
				check_variable = { check_defense_buildings = 1 }
			}
		}
		[[all]
			if = {
				limit = {
					always = $all$
				}
				OR = {
					has_building = fort_15th
					has_building = fort_16th
					has_building = fort_17th
					has_building = fort_18th
				}
			}
		]
		[[equal_or_more_advanced_than]
			if = {
				limit = {
					variable_arithmetic_trigger = {
						export_to_variable = {
							which = equal_or_more_advanced_than_$equal_or_more_advanced_than$
							value = 1
						}
						check_variable = { equal_or_more_advanced_than_fort_15th = 1 }
					}
				}
				OR = {
					has_building = fort_15th
					has_building = fort_16th
					has_building = fort_17th
					has_building = fort_18th
				}
			}
			else_if = {
				limit = {
					variable_arithmetic_trigger = {
						export_to_variable = {
							which = equal_or_more_advanced_than_$equal_or_more_advanced_than$
							value = 1
						}
						check_variable = { equal_or_more_advanced_than_fort_16th = 1 }
					}
				}
				OR = {
					has_building = fort_16th
					has_building = fort_17th
					has_building = fort_18th
				}
			}
			else_if = {
				limit = {
					variable_arithmetic_trigger = {
						export_to_variable = {
							which = equal_or_more_advanced_than_$equal_or_more_advanced_than$
							value = 1
						}
						check_variable = { equal_or_more_advanced_than_fort_17th = 1 }
					}
				}
				OR = {
					has_building = fort_17th
					has_building = fort_18th
				}
			}
			else = {
				has_building = fort_18th
			}
		]
	}
	else_if = {
		limit = {
			variable_arithmetic_trigger = {
				export_to_variable = {
					which = check_$group$_buildings
					value = 1
				}
				check_variable = { check_all_buildings = 1 }
			}
		}
		[[equal_or_more_advanced_than]
			# no checks here
		]
		[[all]
			if = {
				limit = {
					always = $all$
				}
				OR = {
					has_building = marketplace
					has_building = trade_lvl_2
					has_building = trade_depot
					has_building = stock_exchange
					has_building = courthouse
					has_building = town_hall
					has_building = government_lvl_3
					has_building = government_lvl_4
					has_building = university
					has_building = dock
					has_building = navymanpower_lvl_2
					has_building = drydock
					has_building = shipyard
					has_building = navyforcelimit_lvl_2
					has_building = grand_shipyard
					has_building = workshop
					has_building = production_lvl_2
					has_building = production_lvl_3
					has_building = counting_house
					has_building = manpower_lvl_1
					has_building = barracks
					has_building = training_fields
					has_building = forcelimit_lvl_1
					has_building = regimental_camp
					has_building = conscription_center
					has_building = temple
					has_building = taxation_lvl_2
					has_building = cathedral
					has_building = taxation_lvl_4
					has_building = fort_15th
					has_building = fort_16th
					has_building = fort_17th
					has_building = fort_18th
					has_building = wharf
					has_building = weapons
					has_building = textile
					has_building = plantations
					has_building = tradecompany
					has_building = farm_estate
					has_building = mills
					has_building = furnace
					has_building = infrastructure_lvl_1
					has_building = infrastructure_lvl_2
					has_building = infrastructure_lvl_3
					has_building = infrastructure_lvl_4
					has_building = terrain_land
					has_building = terrain_woodland
					has_building = terrain_desert
					has_building = terrain_hills
					has_building = terrain_art
					has_building = terrain_jungle
					has_building = terrain_swamp
					has_building = terrain_coastal
					has_building = navalbase_lvl_1
					has_building = navalbase_lvl_2
					has_building = fortress_keep
					has_building = fortress_barracks
					has_building = fortress_towers
					has_building = fortress_artillery
					has_building = fortress_wall
					has_building = fortress_supply
					has_building = el_escorial
					has_building = blast_furnace
					has_building = UKS_Palace
					has_building = UKS_Palace_2
				}
			}
			else = {
				always = yes
			}
		]
	}
	else = {
		always = yes
	}
}

province_has_at_least_num_of_buildings = {
	# takes "amount" as argument, e.g. province_has_at_least_num_of_buildings = { amount = 3 }
	# you can use this trigger with custom_trigger_tooltip if necessary, HAS_AT_LEAST_<0-10>_BUILDINGS are localized
	calc_true_if = {
		has_building = marketplace
		has_building = trade_lvl_2
		has_building = trade_depot
		has_building = stock_exchange
		has_building = courthouse
		has_building = town_hall
		has_building = government_lvl_3
		has_building = government_lvl_4
		has_building = university
		has_building = dock
		has_building = navymanpower_lvl_2
		has_building = drydock
		has_building = shipyard
		has_building = navyforcelimit_lvl_2
		has_building = grand_shipyard
		has_building = workshop
		has_building = production_lvl_2
		has_building = production_lvl_3
		has_building = counting_house
		has_building = manpower_lvl_1
		has_building = barracks
		has_building = training_fields
		has_building = forcelimit_lvl_1
		has_building = regimental_camp
		has_building = conscription_center
		has_building = temple
		has_building = taxation_lvl_2
		has_building = cathedral
		has_building = taxation_lvl_4
		has_building = fort_15th
		has_building = fort_16th
		has_building = fort_17th
		has_building = fort_18th
		has_building = wharf
		has_building = weapons
		has_building = textile
		has_building = plantations
		has_building = tradecompany
		has_building = farm_estate
		has_building = mills
		has_building = furnace
		has_building = infrastructure_lvl_1
		has_building = infrastructure_lvl_2
		has_building = infrastructure_lvl_3
		has_building = infrastructure_lvl_4
		has_building = terrain_land
		has_building = terrain_woodland
		has_building = terrain_desert
		has_building = terrain_hills
		has_building = terrain_art
		has_building = terrain_jungle
		has_building = terrain_swamp
		has_building = terrain_coastal
		has_building = navalbase_lvl_1
		has_building = navalbase_lvl_2
		has_building = fortress_keep
		has_building = fortress_barracks
		has_building = fortress_towers
		has_building = fortress_artillery
		has_building = fortress_wall
		has_building = fortress_supply
		has_building = el_escorial
		has_building = blast_furnace
		has_building = UKS_Palace
		has_building = UKS_Palace_2
		amount = $amount$
	}
}

## country scope
# they check for <amount> of a specific building, not <amount> of buildings of the group
num_of_owned_trade_building_trigger = {
	OR = {
		marketplace = $amount$
		trade_lvl_2 = $amount$
		trade_depot = $amount$
		stock_exchange = $amount$
	}
}

num_of_owned_government_building_trigger = {
	OR = {
		courthouse = $amount$
		town_hall = $amount$
		government_lvl_3 = $amount$
		government_lvl_4 = $amount$
		university = $amount$
	}
}

num_of_owned_navy_building_trigger = {
	OR = {
		dock = $amount$
		navymanpower_lvl_2 = $amount$
		drydock = $amount$
		shipyard = $amount$
		navyforcelimit_lvl_2 = $amount$
		grand_shipyard = $amount$
		navalbase_lvl_1 = $amount$
		navalbase_lvl_2 = $amount$
	}
}

num_of_owned_production_building_trigger = {
	OR = {
		workshop = $amount$
		production_lvl_2 = $amount$
		production_lvl_3 = $amount$
		counting_house = $amount$
	}
}

num_of_owned_army_building_trigger = {
	OR = {
		manpower_lvl_1 = $amount$
		barracks = $amount$
		training_fields = $amount$
		forcelimit_lvl_1 = $amount$ 
		regimental_camp = $amount$
		conscription_center = $amount$
	}
}

num_of_owned_taxation_building_trigger = {
	OR = {
		temple = $amount$
		taxation_lvl_2 = $amount$
		cathedral = $amount$
		taxation_lvl_4 = $amount$
	}
}

num_of_owned_defence_building_trigger = {
	OR = {
		fort_15th = $amount$
		fort_16th = $amount$
		fort_17th = $amount$
		fort_18th = $amount$
	}
}

num_of_owned_manufactory_trigger = {
	OR = {
		wharf = $amount$
		weapons = $amount$
		textile = $amount$
		tradecompany = $amount$
		farm_estate = $amount$
		mills = $amount$
		plantations = $amount$
		furnace = $amount$
	}
}

num_of_owned_manufactory_combined_trigger = {
	calc_true_if = {
		all_owned_province = {
			OR = {
				has_building = wharf
				has_building = weapons
				has_building = textile
				has_building = tradecompany
				has_building = farm_estate
				has_building = mills
				has_building = plantations
				has_building = furnace
			}
		}
		amount = $amount$
	}
}